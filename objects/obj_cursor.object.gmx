<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursorMain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set mouse variables
gridX = 0;
gridY = 0;

globalvar hoverNode;
hoverNode = noone;
globalvar hoverCard;
hoverCard = noone;
globalvar selCard;
selCard = noone;
globalvar selNode;
selNode = noone;
globalvar hoverDeck;
hoverDeck = noone;
globalvar selDeck;
selDeck = noone;
globalvar hoverEndTurn;
hoveEndTurn = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = mouse_x;
y = mouse_y;

gridX = floor(x/cWidth);
gridY = floor(y/cHeight);

hoverNode = instance_position(x,y,obj_node);
hoverCard = instance_position(x,y,obj_card);
hoverDeck = instance_position(x,y,obj_deck);
hoverEndTurn = instance_position(x,y,obj_endTurn);

if(mouse_check_button_pressed(mb_left)){
    if(hoverNode != noone){
    selNode=hoverNode;
    }
    else{
    selNode = noone;
    }
    if(hoverCard != noone){
    selCard = hoverCard;
    }else{
    selCard = noone;
    }
    if(hoverDeck != noone){
    selDeck = hoverDeck;
    }else{
    selDeck = noone;
    }
    
    
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///show the selected node
draw_self();
/*
if(hoverNode != noone){
    draw_sprite(spr_selected, 0 , gridX * cWidth, gridY * cHeight);
}
draw_text(1800, 500 , "turn = " + string(global.turn));
draw_text(1800, 520 , "phase = " + string(global.phase));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
